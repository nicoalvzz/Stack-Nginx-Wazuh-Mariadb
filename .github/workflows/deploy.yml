name: Build and Push Docker Image  # Nombre del workflow

on:
  push:
    paths:
      - Dockerfile  # Se ejecuta solo si cambia este archivo
      - docker-compose.yml  # Se ejecuta si cambia este archivo
    branches:
      - main  # Solo se activa cuando los cambios están en la rama 'main'

jobs:
  build-and-push:
    runs-on: ubuntu-latest  # Se ejecuta en una máquina virtual con Ubuntu

    strategy:
      matrix:
        service: [mariadb, nginx, wazuh-manager]  # Se ejecutará una vez por cada servicio

    steps:
      - name: Checkout code  # Paso 1: Descargar el código del repositorio
        uses: actions/checkout@v3  # Usa la acción oficial de GitHub para clonar el repo

      - name: Log in to DockerHub  # Paso 2: Autenticarse en Docker Hub
        uses: docker/login-action@v2  # Usa la acción de Docker para login
        with:
          username: ${{ secrets.DOCKER_USERNAME }}  # Nombre de usuario almacenado en secrets
          password: ${{ secrets.DOCKER_PASSWORD }}  # Contraseña almacenada en secrets

      - name: Build Docker Image  # Paso 3: Construir la imagen Docker
        run: |
          docker build --build-arg SERVICE=${{ matrix.service }} -t ${{ secrets.DOCKER_USERNAME }}/stackp28:${{ matrix.service }} .
        # Usa el argumento --build-arg para definir qué servicio se está construyendo
        # Etiqueta la imagen con el formato <DOCKER_USERNAME>/stackp28:<servicio>

      - name: Push Docker Image  # Paso 4: Subir la imagen a Docker Hub
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/stackp28:${{ matrix.service }}
        # Sube la imagen con la etiqueta generada anteriormente
